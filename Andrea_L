---
title: "Bellabeat Analysis"
Author: Andrea Lightfoot
date: '2023-01-25'
output:
  pdf_document: default
  html_document: default
---




**Ask**

Bellabeat is a technology company that creates health and wellness products for women. Their products include smartwatches, activity trackers, and other wearable devices that track a variety of health metrics such as sleep, stress, and menstrual cycles. The company also offers a mobile app that allows users to view and analyze their health data, as well as receive personalized insights and recommendations. Bellabeat's products are designed to be stylish and blend seamlessly into users' everyday lives, with a focus on helping women make informed decisions about their health and well-being.

The primary focus of this analysis is to analyze consumer data to reveal more opportunities for growth and marketing opportunities. This analysis will focus on the Bellabeat app and watch.

The Bellabeat app provides user information regarding health, activity, sleep, stress,
menstrual cycle, and mindfulness. The app also connects users to their other products.



Business Task

Analyze outside smart device data to identify trends that can be used to gain insight into future marketing stragies for Bellabeat.



Stakeholders

Urška Sršen: Bellabeat’s cofounder and Chief Creative Officer

Sando Mur: Mathematician and Bellabeat’s cofounder; key member of the Bellabeat executive team.

Bellabeat marketing analytics team.





**Prepare Phase**




Information about Dataset

The data source being used is FitBit Fitness tracker data made available through Mobius and stored in Kaggle.This dataset generated by respondents to a distributed survey via Amazon Mechanical Turk between 03.12.2016-05.12.2016.



https://www.kaggle.com/arashnic/fitbit

There are 18 csv files in the dataset.



Privacy of Data 

The data is confirmed to be open-source. The person who associated a work with this deed has dedicated the work to the public domain by waiving all of his or her rights to the work worldwide under copyright law, including all related and neighboring rights, to the extent allowed by law.



Data Crediablility using the ROCCC process:

Reliable- The data is not reliable it only contains data for 24 users. Fitbit has 29 million active users. The data margin of error would equate to 90%-95% confindence level, with a 15%-18% margin of error. The data was collected over a period of two months. This time period is not sufficient ay least 6-12 months of data would be perfered.




Original- Data is not original. Data was distributed by survey via Amazon Mechanical Turk not supplied by FitBit.



Comprehensive- Data is not comprehensive.   The data does not list any demographics such as sex and age. There is no way of knowing if the data has any biases or how the individuals were choosen. There is not enough information to about the data collection process.



Current- The data is not current, it is over seven years old. Data from the past year would be preferable.


Cited- The integrity and credibility of the Amazon Mechanical Turk is unknown. More research is required to determine data colection method.


Because of the limits of the data. Please take the analysis in caution. However the data can still be useful for insights and marketing for Bellabeat.






**Process Phase**

Analysis will be done in R for accessibility.

First the packages will be installed, packages include:

tidyverse
readr
lubridate
ggplot2
ggrepel
here
skimr
janitor
scales
knitr



```{r}
install.packages("tidyverse")
install.packages("readr")
install.packages("lubridate")
install.packages("ggplot2")
install.packages("ggrepel")
install.packages("here")
install.packages("skimr")
install.packages("janitor")
install.packages("scales")
install.packages("knitr")

library("tidyverse")
library("readr")
library("lubridate")
library("ggplot2")
library("ggrepel")
library("here")
library("skimr")
library("janitor")
library("scales")
library("knitr")


```


For the purposes for this analysis these three datasets will be the focus:

daily_sleep
daily_activity
hourly_steps


```{r}
daily_activity <- read.csv("dailyActivity_merged.csv")
daily_sleep <- read.csv("sleepDay_merged.csv")
hourly_steps <- read.csv("hourlySteps_merged.csv")
```



Next step is viewing the data and checking for errors.
```{r}
head(daily_activity)
str(daily_activity)

head(daily_sleep)
str(daily_sleep)



head(hourly_steps)
str(hourly_steps)


```
We check how many distinct users there are in the data.


```{r distinct users}
n_distinct(daily_activity$Id)
n_distinct(daily_sleep$Id)
n_distinct(hourly_steps$Id)
```


How many observations there are in each dataframe.

```{r observations}

nrow(daily_activity)
nrow(daily_sleep)
nrow(hourly_steps)

```

[1] 940
[1] 413
[1] 22099



How many duplicates are in the data. The daily_sleep dataset have three that need to be removed.

```{r} 

sum(duplicated(daily_activity))
sum(duplicated(daily_sleep))
sum(duplicated(hourly_steps))

```

[1] 0
[1] 3
[1] 0



Removing the duplicates from the daily_sleep dataset

```{r}

daily_sleep <- daily_sleep %>%
  distinct() %>%
  drop_na()
```





Then double check for duplicates again.


```{r}
sum(duplicated(daily_sleep))


```





The summary statistics for each dataframe before cleaning.


```{r}
daily_activity %>%  
  select(TotalSteps,
         TotalDistance,
         SedentaryMinutes) %>%
  summary()
```



```{r}
daily_sleep %>%  
  select(TotalSleepRecords,
  TotalMinutesAsleep,
  TotalTimeInBed) %>%
  summary()
```



```{r}  
hourly_steps %>% 
  select(StepTotal) %>% 
  summary()

```





Renaming columns to lower case for easier accessibly later when data sets are merged.

```{r}

clean_names(daily_activity)
daily_activity<- rename_with(daily_activity, tolower)

clean_names(daily_sleep)
daily_sleep <- rename_with(daily_sleep, tolower)

clean_names(hourly_steps)
hourly_steps <- rename_with(hourly_steps, tolower)


```



Now we check our columns again.

```{r}
colnames(daily_activity)
colnames(daily_sleep)
colnames(hourly_steps)
```

Next is to make the time and date format consistent for each dataset.



```{r}

daily_activity <- daily_activity %>%
  mutate(date = as_date(date, format = "%m/%d/%Y"))



head(daily_activity)

```


```{r}

daily_sleep %>%
  mutate(date = as_date(date,format ="%m/%d/%Y %I:%M:%S %p" , tz=Sys.timezone()))


head(daily_sleep)

```


```{r}

hourly_steps<- hourly_steps %>% 
  mutate(activityhour = as.POSIXct(activityhour,format ="%m/%d/%Y %I:%M:%S %p" , tz=Sys.timezone()))

head(hourly_steps)


```


Next we will merge the daily_sleep and the daily_activity datasets together to see if there are any correlations.


```{r}
combined_data <- merge(daily_sleep, daily_activity, by=c ("id","date"))

glimpse(combined_data)


 
```





Now to view how many users are in the merged dataset.

```{r}
n_distinct(combined_data$id)
```

Take the average of each individual user in the dataset.
```{r}

daily_average <- combined_data %>%
  group_by(id) %>%
  summarize(mean_daily_steps = mean(totalsteps), mean_daily_calories = mean(calories), mean_daily_sleep = mean(totalminutesasleep))


```




Over all the avarage number of steps is 7880, avarage number of calories is 2397, average length of sleep is 337.4 minutes or 6.29 hours a night.







```{r}


daily_average %>% 
  select(mean_daily_steps, mean_daily_calories, mean_daily_sleep) %>% 
  summary()


```


To find how often the watch is worn during the day a new column with be added to the combined_data dataset and will be named daytime_wear. 
 We'll combine the very active minutes, fairly active minutes and light active minutes to create this column.
 
 
 
```{r}

daytime_wear <- combined_data %>% 
  group_by(id) %>% 
  mutate(daytime_mintues = veryactiveminutes+fairlyactiveminutes+lightlyactiveminutes+sedentaryminutes)
  

```




Average usage during the day is 971.6 which is equal to 16.1 hours.

```{r}
mean(daytime_wear$daytime_mintues)

```



**Analyze and Share**



Now we try to find the how active users are by the days of the week and if they are getting the recommend amount of steps and sleep.

```{r}
weekly_sleep_steps <- combined_data %>%
  mutate(weekday = weekdays(date))

weekly_sleep_steps$weekday <-ordered(weekly_sleep_steps$weekday, levels=c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday", "Sunday"))

 weekly_sleep_steps <-weekly_sleep_steps%>%
  group_by(weekday) %>%
  summarize (daily_steps = mean(totalsteps), daily_sleep = mean(totalminutesasleep))

head(weekly_sleep_steps)


```

```{r}

ggarrange(
  ggplot(weekly_sleep_steps) +
    geom_col(aes(weekday, daily_steps), fill = "yellow") +
    geom_hline(yintercept = 7500) +
    labs(title = "Weekly Daily Steps", x= "", y = "") +
    theme(axis.text.x = element_text(angle = 45,vjust = 0.5, hjust = 1)),
  ggplot(weekly_sleep_steps, aes(weekday, daily_sleep)) +
    geom_col(fill = "blue") +
    geom_hline(yintercept = 430) +
    labs(title = "Weekly Minutes Asleep", x= "", y = "") +
    theme(axis.text.x = element_text(angle = 45,vjust = 0.5, hjust = 1)))

```

According to the Dr. Catrine Tudor-Locke's classification of pedometer-determined physical activity for adults, <https://cdnsciencepub.com/doi/pdf/10.1139/apnm-2012-0235>,


7500 steps daily is the minimum required to meet MVPA(Moderate to Vigorious Physical Activity) recommendation, 10,000 is prefered step count.


According to the Mayo Clinic adults shouls get at least 430 minutes or 7 hours of sleep every night. 

<https://www.mayoclinic.org/healthy-lifestyle/adult-health/expert-answers/how-many-hours-of-sleep-are-enough/faq-20057898>


Users barely make the minimum step requirement during the week (Tuesday, Wednesday, Thursday). 

Users do not get the minimum minutes of sleep each night.




Now that we have the user's daily steps. Let's examine what time of the day they're most active.

```{r}
hourly_steps <- hourly_steps %>%
  separate(activityhour, into = c("date", "time"), sep= " ") %>%
  mutate(date = ymd(date)) 
  
head(hourly_steps)
```


```{r}
hourly_steps %>%
  group_by(time) %>%
  summarize(average_steps = mean(steptotal)) %>%
  ggplot() +
  geom_col(mapping = aes(x=time, y = average_steps, fill = average_steps)) + 
  labs(title = "Hourly Steps During the Day", x="", y="") + 
  scale_fill_gradient(low = "blue", high = "#F78306")+
  theme(axis.text.x = element_text(angle = 90))
```

Users are the most active in the during lunch time between 11a and 1p and 
early evening between 5p and 7p.


Now we will determine if there is a correlation between the the number of daily steps and the amount of sleep at night. Then we will do the same with the correlation between number of steps and calories.


We will use the sleep, calories, and step averages for every user.


```{r}

daily_average <- combined_data %>%
  group_by(id) %>%
  summarize(mean_daily_steps = mean(totalsteps), mean_daily_calories = mean(calories), mean_daily_sleep = mean(totalminutesasleep))


```


```{r}


daily_average %>% 
  select(mean_daily_steps, mean_daily_calories, mean_daily_sleep) %>% 
  summary()


```




Over all the avarage number of steps is 7880, avarage number of calories is 2397, average length of sleep is 337.4 minutes or 6.29 hours a night.



```{r}
ggarrange(
ggplot(daily_average, aes(x=mean_daily_steps, y=mean_daily_sleep))+
  geom_jitter() +
  geom_smooth(color = "orange") + 
  labs(title = "Daily Steps vs Minutes Asleep", x = "Daily Steps", y= "Minutes Asleep") +
   theme(panel.background = element_blank(),
        plot.title = element_text( size=16)), 
ggplot(daily_average, aes(x=mean_daily_steps, y=mean_daily_calories))+
  geom_jitter() +
  geom_smooth(color = "blue") + 
  labs(title = "Daily Steps vs Calories Burned", x = "Daily Steps", y= "Calories Burned") +
   theme(panel.background = element_blank(),
        plot.title = element_text( size=16)))
```
There does not seem to be any correlation between daily steps and minutes asleep.

There does seem to be a correlation between calories and daily steps.



The next step will be to see how long the watch is worn during the day and if there is more calories burned when wearing the watch.



```{r}

ggarrange(
ggplot(daytime_wear, aes(x=calories, y=daytime_minutes))+
  geom_jitter() +
  geom_smooth(color = "#06F7EC") + 
  labs(title = "Daytime Wear and Calories", x = "Daily Minutes", y= "Calories") +
   theme(panel.background = element_blank(),
        plot.title = element_text( size=16)))+
  ylim(0,3000)


```

The longer the user wears the watch the more calories the user can see that they burned.

Over all the average number of steps is 7880, avarage number of calories is 2397, average length of sleep is 337.4 minutes or 6.29 hours a night


**Act and Conclusion**




The average trends are as followed,

The average user:

Is asleep - 337.4 minutes or 6.29 hours, under the recommeded 7 hours.

Average calories - The average number of calories burned for adults per day is ~2000 calories, the average FitBit user burned an average of 2397 calories. However its is recommended to take this in caution due to no demographics being available for user base.



Average daily steps - 7880 which is barely over the minimum number of steps that are recommended and under the goal of 10,000 steps a day.







Recommendations- Bellabeat App

Bellabeat could offer an achievement progrom where the user can unlock achievements such as getting 10,000 steps during the least active days in the middle of the week. Plus the ability to link with friends and family to compete against each other.

Bellabeat could offer a rewards program where the user could win prizes, upgrades or merchandise. 

Bellabeat could also offer a streak incentive. Have to user set a goal to achieve for a certain period of time.

Bellabeat could have a alarm that tells the user when its time for bed and time to wake-up. Have a blue light filter on the app that the user could program to turn on an hour before the set sleep time. Notifications that the user can program to remind them of the start of menstruation, ovulation, ect.

Bellabeat could encourage users to wear the watch for longer periods of time by offering a product with longer battery life, waterproofing the device, and create more custom fashionable bands for the watch so it could be used in both casual and formal settings.





Further Reasearch

For future data collection the data should come from the Bellabeat app. Preferably data from the last 6-12 months. The tracking data could have demographic information such as age that can determine how to market to various age groups.
